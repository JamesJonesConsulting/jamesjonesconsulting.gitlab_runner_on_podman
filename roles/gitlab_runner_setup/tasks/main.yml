---
# tasks file for gitlab_runner_setup
- include_role:
    name: jamesjonesconsulting.podman_socket_group_permissions.permissions_setup
  vars:
    podman_user_group: "{{ gitlab_runner_podman_group }}"
    podman_users:
      - "{{ gitlab_runner_username }}"
# - name: Setup the GitLab Runner Repository 
#   shell: |
#     curl -L "https://packages.gitlab.com/install/repositories/runner/gitlab-runner/script.rpm.sh" | bash
# - name: Adjust version if not supported 
#   block:
#     - name: Set best compatible version 
#       set_fact:
#         releasever: "{{ (supported_gitab_runners[ansible_facts['distribution']] | max) if ((ansible_facts['distribution_major_version'] | int) > (supported_gitab_runners[ansible_facts['distribution']] | max)) else (supported_gitab_runners[ansible_facts['distribution']] | min) }}"
#     - debug:
#         msg: "{{ releasever }} selected"


#   when: 
#     - "(ansible_facts['distribution_major_version'] | int) not in supported_gitab_runners[ansible_facts['distribution']]"
  
  

- name: Download GitLab Runner yum repo file
  ansible.builtin.get_url:
    url: "https://packages.gitlab.com/install/repositories/runner/gitlab-runner/config_file.repo?os={{ os }}&dist={{ dist }}&source=script"
    dest: /etc/yum.repos.d/runner_gitlab-runner.repo
  vars:
    dist: "{{ (supported_gitab_runners[ansible_facts['distribution']] | max) if ((ansible_facts['distribution_major_version'] | int) > (supported_gitab_runners[ansible_facts['distribution']] | max)) else (supported_gitab_runners[ansible_facts['distribution']] | min) }}"
    os: "ansible_facts['distribution'] | lower"